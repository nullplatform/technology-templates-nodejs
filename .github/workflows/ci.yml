name: ci-nullplatform
env:
  NULLPLATFORM_API_KEY: ${{ secrets.NULLPLATFORM_API_KEY }}
on:
  push:
    branches:
      - main
permissions:
  id-token: write
  contents: read
  packages: read
jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Install nullplatform cli
        run: curl https://cli.nullplatform.com/install.sh | sh
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Start nullplatform CI
        run: np build start
  build:
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        asset: [lambda, docker-image]
    env:
      ASSET_TYPE: ${{ matrix.asset }}
    steps:
      - name: Install nullplatform cli
        run: curl https://cli.nullplatform.com/install.sh | sh
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build asset
        run: make build
      - name: Push asset
        run: make push
    outputs:
      status: ${{ contains(fromJSON('["failure", "cancelled"]'), job.status) && 'failed' || 'successful' }}
  finalize:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ always() }}
    steps:
      - name: Install nullplatform cli
        run: curl https://cli.nullplatform.com/install.sh | sh
      - name: End nullplatform CI
        run: np build update --status ${{ needs.build.outputs.status }}
